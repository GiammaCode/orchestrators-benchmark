# docker-compose.yml (versione migliorata)
version: '3.8'

services:
  mongodb:
    image: mongo:7
    container_name: assignment-mongodb
    # In produzione, potresti rimuovere la sezione 'ports' per sicurezza.
    # Il backend comunicherà tramite la rete interna.
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - app-network
    # Usa le credenziali dal file .env
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: assignment-backend
    ports:
      - "5000:5000"
    environment:
      # L'URI ora include le credenziali prese dal file .env
      - MONGO_URI=mongodb://${MONGO_INITDB_ROOT_USERNAME}:${MONGO_INITDB_ROOT_PASSWORD}@mongodb:27017/
      # In produzione, cambia FLASK_ENV in 'production'
      - FLASK_ENV=development
    volumes:
      - ./data/submissions:/data/submissions
      # Questo volume è per l'hot-reload. Rimuovilo per la build di produzione.
      - ./backend:/app
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - app-network
    restart: unless-stopped

volumes:
  mongodb_data:
    driver: local

networks:
  app-network:
    driver: bridge