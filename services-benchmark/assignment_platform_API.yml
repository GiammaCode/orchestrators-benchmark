openapi: 3.0.0
info:
  title: Submission management API
  description: API for uploading assignments (professors) and submitting homework (students).
  version: 1.0.0

servers:
  - url: http://localhost:8080

tags:
  - name: Student
    description: Endpoints for the student area
  - name: Professor
    description: Endpoints for the professor area

paths:
  # --- Student Area ---

  /assignments:
    get:
      tags:
        - Student
      summary: (Student) List all assignments
      description: Returns the list of all available assignments.
      responses:
        '200':
          description: A list of assignments.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Assignment'
    post:
      tags:
        - Professor
      summary: (Professor) Create a new assignment
      description: Allows a professor to create a new assignment.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewAssignment'
      responses:
        '201':
          description: Assignment created successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Assignment'

  /assignments/{assignmentId}:
    get:
      tags:
        - Student
      summary: (Student) Assignment details
      description: Returns the details of a single specific assignment.
      parameters:
        - name: assignmentId
          in: path
          required: true
          schema:
            type: string
          description: The ID (ObjectId) of the assignment.
      responses:
        '200':
          description: Assignment details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Assignment'

  /assignments/{assignmentId}/submit:
    post:
      tags:
        - Student
      summary: (Student) Submit homework
      description: Allows a student to submit homework for a specific assignment.
      parameters:
        - name: assignmentId
          in: path
          required: true
          schema:
            type: string
          description: The ID (ObjectId) of the assignment being submitted to.
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SubmissionPayload' # <-- Questo ora punta al payload modificato
      responses:
        '201':
          description: Submission successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Submission' # <-- Questo ora punta alla submission modificata

  # --- Professor Area ---

  /submissions:
    get:
      tags:
        - Professor
      summary: (Professor) List all submissions
      description: Returns a list of all submissions received for all assignments.
      responses:
        '200':
          description: A list of submissions.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Submission' # <-- Questo ora punta alla submission modificata

  /submissions/{idSubmission}: # <-- MODIFICATO (era {submissionId})
    get:
      tags:
        - Professor
      summary: (Professor) Submission details
      description: Returns the details of a single specific submission.
      parameters:
        - name: idSubmission # <-- MODIFICATO (era submissionId)
          in: path
          required: true
          schema:
            type: string
          description: The ID (ObjectId) of the submission.
      responses:
        '200':
          description: Submission details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Submission' # <-- Questo ora punta alla submission modificata

# --- Components (Data Models) ---

components:
  schemas:
    # Model for an Assignment (Read)
    Assignment:
      type: object
      properties:
        _id:
          type: string
          description: ObjectId
          readOnly: true
        title:
          type: string
          example: "Final Flask Project"
        description:
          type: string
          example: "Develop a complete web app..."
        created_at:
          type: string
          format: date-time
          readOnly: true
        due_date:
          type: string
          format: date-time
          example: "2025-11-15T23:59:59Z"
      required:
        - _id
        - title
        - description
        - created_at
        - due_date

    # Model for creating a new Assignment (Write)
    NewAssignment:
      type: object
      properties:
        title:
          type: string
          example: "Final Flask Project"
        description:
          type: string
          example: "Develop a complete web app..."
        due_date:
          type: string
          format: date-time
          example: "2025-11-15T23:59:59Z"
      required:
        - title
        - description
        - due_date

    # --- MODIFICHE INIZIANO QUI ---

    # [RIMOSSO] Il modello 'File' non è più referenziato da 'Submission'.
    # E' stato rimosso per pulizia.

    # Model for a Submission (Read) - MODIFICATO
    Submission:
      type: object
      properties:
        idSubmission: # <-- MODIFICATO (da _id)
          type: string
          description: ObjectId della submission
          readOnly: true
        idAssignment: # <-- MODIFICATO (da assignment_id e senza _title)
          type: string
          description: Assignment ObjectId
          readOnly: true
        student_name: # <-- MANTENUTO (come "Nome studente")
          type: string
          example: "John Doe"
        submitted_at: # <-- MANTENUTO
          type: string
          format: date-time
          readOnly: true
        path_file: # <-- MODIFICATO (da 'files' array)
          type: string
          format: uri
          description: "Percorso (URL) del file consegnato"
          example: "/uploads/project_johndoe.zip"
          readOnly: true # Il server genera questo percorso dopo il caricamento
      required:
        - idSubmission
        - idAssignment
        - student_name
        - submitted_at
        - path_file

    # Model for a Submission Payload (Write) - MODIFICATO
    SubmissionPayload:
      type: object
      properties:
        student_name:
          type: string
          description: "Nome e cognome dello studente"
          example: "John Doe"
        file: # <-- MODIFICATO (da 'files' array a 'file' singolo)
          type: string
          format: binary
          description: Il singolo file da caricare.
      required:
        - student_name
        - file